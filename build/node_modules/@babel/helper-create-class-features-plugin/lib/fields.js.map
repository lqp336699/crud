{"version":3,"sources":["../../../../../backend/node_modules/@babel/helper-create-class-features-plugin/lib/fields.js"],"names":["Object","defineProperty","exports","value","buildPrivateNamesMap","buildPrivateNamesNodes","transformPrivateNamesUsage","buildFieldsInitNodes","_core","data","require","_helperReplaceSupers","_interopRequireWildcard","_helperMemberExpressionToFunctions","_interopRequireDefault","_helperOptimiseCallExpression","obj","__esModule","default","newObj","key","prototype","hasOwnProperty","call","desc","getOwnPropertyDescriptor","get","set","props","privateNamesMap","Map","prop","isPrivate","isMethod","isProperty","isInstance","node","static","name","id","update","has","scope","generateUidIdentifier","method","kind","getId","setId","methodId","loose","state","initNodes","isStatic","isAccessor","push","template","statement","ast","addHelper","privateNameVisitor","PrivateName","path","parentPath","isMemberExpression","property","handle","Class","body","traverse","privateNameInnerVisitor","skip","visitors","merge","environmentVisitor","privateNameHandlerSpec","memoise","member","count","object","memo","maybeGenerateMemoised","memoiser","receiver","types","cloneNode","classRef","file","helperName","callExpression","destructureSet","memberExpression","identifier","args","privateNameHandlerLoose","replaceWith","expression","BASE","REF","PROP","ref","assign","buildPrivateFieldInitLoose","buildUndefinedNode","buildPrivateInstanceFieldInitSpec","buildPrivateStaticFieldInitSpec","privateName","initAdded","buildPrivateMethodInitLoose","buildPrivateInstanceMethodInitSpec","buildPublicFieldInitLoose","computed","expressionStatement","assignmentExpression","isLiteral","buildPublicFieldInitSpec","stringLiteral","buildPrivateStaticMethodInitLoose","buildPrivateMethodDeclaration","getterDeclared","setterDeclared","params","generator","async","methodValue","functionExpression","isGetter","length","isSetter","variableDeclaration","variableDeclarator","thisContextVisitor","ThisExpression","needsClassRef","replaceThisContext","superRef","replacer","methodPath","isLoose","getObjectRef","replace","staticNodes","instanceNodes","isPublic","isField","replaced","thisExpression","unshift","Error","filter","Boolean","wrapClass","remove","isClassExpression"],"mappings":"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","file":"fields.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildPrivateNamesMap = buildPrivateNamesMap;\nexports.buildPrivateNamesNodes = buildPrivateNamesNodes;\nexports.transformPrivateNamesUsage = transformPrivateNamesUsage;\nexports.buildFieldsInitNodes = buildFieldsInitNodes;\n\nfunction _core() {\n  const data = require(\"@babel/core\");\n\n  _core = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _helperReplaceSupers() {\n  const data = _interopRequireWildcard(require(\"@babel/helper-replace-supers\"));\n\n  _helperReplaceSupers = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _helperMemberExpressionToFunctions() {\n  const data = _interopRequireDefault(require(\"@babel/helper-member-expression-to-functions\"));\n\n  _helperMemberExpressionToFunctions = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _helperOptimiseCallExpression() {\n  const data = _interopRequireDefault(require(\"@babel/helper-optimise-call-expression\"));\n\n  _helperOptimiseCallExpression = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction buildPrivateNamesMap(props) {\n  const privateNamesMap = new Map();\n\n  for (const prop of props) {\n    const isPrivate = prop.isPrivate();\n    const isMethod = !prop.isProperty();\n    const isInstance = !prop.node.static;\n\n    if (isPrivate) {\n      const {\n        name\n      } = prop.node.key.id;\n      const update = privateNamesMap.has(name) ? privateNamesMap.get(name) : {\n        id: prop.scope.generateUidIdentifier(name),\n        static: !isInstance,\n        method: isMethod\n      };\n\n      if (prop.node.kind === \"get\") {\n        update.getId = prop.scope.generateUidIdentifier(`get_${name}`);\n      } else if (prop.node.kind === \"set\") {\n        update.setId = prop.scope.generateUidIdentifier(`set_${name}`);\n      } else if (prop.node.kind === \"method\") {\n        update.methodId = prop.scope.generateUidIdentifier(name);\n      }\n\n      privateNamesMap.set(name, update);\n    }\n  }\n\n  return privateNamesMap;\n}\n\nfunction buildPrivateNamesNodes(privateNamesMap, loose, state) {\n  const initNodes = [];\n\n  for (const [name, value] of privateNamesMap) {\n    const {\n      id,\n      static: isStatic,\n      method: isMethod,\n      getId,\n      setId\n    } = value;\n    const isAccessor = getId || setId;\n\n    if (loose) {\n      initNodes.push(_core().template.statement.ast`\n          var ${id} = ${state.addHelper(\"classPrivateFieldLooseKey\")}(\"${name}\")\n        `);\n    } else if (isMethod && !isStatic) {\n      if (isAccessor) {\n        initNodes.push(_core().template.statement.ast`var ${id} = new WeakMap();`);\n      } else {\n        initNodes.push(_core().template.statement.ast`var ${id} = new WeakSet();`);\n      }\n    } else if (!isStatic) {\n      initNodes.push(_core().template.statement.ast`var ${id} = new WeakMap();`);\n    }\n  }\n\n  return initNodes;\n}\n\nconst privateNameVisitor = {\n  PrivateName(path) {\n    const {\n      privateNamesMap\n    } = this;\n    const {\n      node,\n      parentPath\n    } = path;\n    if (!parentPath.isMemberExpression({\n      property: node\n    })) return;\n    if (!privateNamesMap.has(node.id.name)) return;\n    this.handle(parentPath);\n  },\n\n  Class(path) {\n    const {\n      privateNamesMap\n    } = this;\n    const body = path.get(\"body.body\");\n\n    for (const prop of body) {\n      if (!prop.isPrivate()) {\n        continue;\n      }\n\n      if (!privateNamesMap.has(prop.node.key.id.name)) continue;\n      path.traverse(privateNameInnerVisitor, this);\n      path.skip();\n      break;\n    }\n  }\n\n};\n\nconst privateNameInnerVisitor = _core().traverse.visitors.merge([{\n  PrivateName: privateNameVisitor.PrivateName\n}, _helperReplaceSupers().environmentVisitor]);\n\nconst privateNameHandlerSpec = {\n  memoise(member, count) {\n    const {\n      scope\n    } = member;\n    const {\n      object\n    } = member.node;\n    const memo = scope.maybeGenerateMemoised(object);\n\n    if (!memo) {\n      return;\n    }\n\n    this.memoiser.set(object, memo, count);\n  },\n\n  receiver(member) {\n    const {\n      object\n    } = member.node;\n\n    if (this.memoiser.has(object)) {\n      return _core().types.cloneNode(this.memoiser.get(object));\n    }\n\n    return _core().types.cloneNode(object);\n  },\n\n  get(member) {\n    const {\n      classRef,\n      privateNamesMap,\n      file\n    } = this;\n    const {\n      name\n    } = member.node.property.id;\n    const {\n      id,\n      static: isStatic,\n      method: isMethod,\n      methodId,\n      getId,\n      setId\n    } = privateNamesMap.get(name);\n    const isAccessor = getId || setId;\n\n    if (isStatic) {\n      const helperName = isMethod && !isAccessor ? \"classStaticPrivateMethodGet\" : \"classStaticPrivateFieldSpecGet\";\n      return _core().types.callExpression(file.addHelper(helperName), [this.receiver(member), _core().types.cloneNode(classRef), _core().types.cloneNode(id)]);\n    }\n\n    if (isMethod) {\n      if (isAccessor) {\n        return _core().types.callExpression(file.addHelper(\"classPrivateFieldGet\"), [this.receiver(member), _core().types.cloneNode(id)]);\n      }\n\n      return _core().types.callExpression(file.addHelper(\"classPrivateMethodGet\"), [this.receiver(member), _core().types.cloneNode(id), _core().types.cloneNode(methodId)]);\n    }\n\n    return _core().types.callExpression(file.addHelper(\"classPrivateFieldGet\"), [this.receiver(member), _core().types.cloneNode(id)]);\n  },\n\n  set(member, value) {\n    const {\n      classRef,\n      privateNamesMap,\n      file\n    } = this;\n    const {\n      name\n    } = member.node.property.id;\n    const {\n      id,\n      static: isStatic,\n      method: isMethod,\n      setId,\n      getId\n    } = privateNamesMap.get(name);\n    const isAccessor = getId || setId;\n\n    if (isStatic) {\n      const helperName = isMethod && !isAccessor ? \"classStaticPrivateMethodSet\" : \"classStaticPrivateFieldSpecSet\";\n      return _core().types.callExpression(file.addHelper(helperName), [this.receiver(member), _core().types.cloneNode(classRef), _core().types.cloneNode(id), value]);\n    }\n\n    if (isMethod) {\n      if (setId) {\n        return _core().types.callExpression(file.addHelper(\"classPrivateFieldSet\"), [this.receiver(member), _core().types.cloneNode(id), value]);\n      }\n\n      return _core().types.callExpression(file.addHelper(\"classPrivateMethodSet\"), []);\n    }\n\n    return _core().types.callExpression(file.addHelper(\"classPrivateFieldSet\"), [this.receiver(member), _core().types.cloneNode(id), value]);\n  },\n\n  destructureSet(member) {\n    const {\n      privateNamesMap,\n      file\n    } = this;\n    const {\n      name\n    } = member.node.property.id;\n    const {\n      id\n    } = privateNamesMap.get(name);\n    return _core().types.memberExpression(_core().types.callExpression(file.addHelper(\"classPrivateFieldDestructureSet\"), [this.receiver(member), _core().types.cloneNode(id)]), _core().types.identifier(\"value\"));\n  },\n\n  call(member, args) {\n    this.memoise(member, 1);\n    return (0, _helperOptimiseCallExpression().default)(this.get(member), this.receiver(member), args);\n  }\n\n};\nconst privateNameHandlerLoose = {\n  handle(member) {\n    const {\n      privateNamesMap,\n      file\n    } = this;\n    const {\n      object\n    } = member.node;\n    const {\n      name\n    } = member.node.property.id;\n    member.replaceWith(_core().template.expression`BASE(REF, PROP)[PROP]`({\n      BASE: file.addHelper(\"classPrivateFieldLooseBase\"),\n      REF: object,\n      PROP: privateNamesMap.get(name).id\n    }));\n  }\n\n};\n\nfunction transformPrivateNamesUsage(ref, path, privateNamesMap, loose, state) {\n  const body = path.get(\"body\");\n\n  if (loose) {\n    body.traverse(privateNameVisitor, Object.assign({\n      privateNamesMap,\n      file: state\n    }, privateNameHandlerLoose));\n  } else {\n    (0, _helperMemberExpressionToFunctions().default)(body, privateNameVisitor, Object.assign({\n      privateNamesMap,\n      classRef: ref,\n      file: state\n    }, privateNameHandlerSpec));\n  }\n}\n\nfunction buildPrivateFieldInitLoose(ref, prop, privateNamesMap) {\n  const {\n    id\n  } = privateNamesMap.get(prop.node.key.id.name);\n  const value = prop.node.value || prop.scope.buildUndefinedNode();\n  return _core().template.statement.ast`\n    Object.defineProperty(${ref}, ${id}, {\n      // configurable is false by default\n      // enumerable is false by default\n      writable: true,\n      value: ${value}\n    });\n  `;\n}\n\nfunction buildPrivateInstanceFieldInitSpec(ref, prop, privateNamesMap) {\n  const {\n    id\n  } = privateNamesMap.get(prop.node.key.id.name);\n  const value = prop.node.value || prop.scope.buildUndefinedNode();\n  return _core().template.statement.ast`${id}.set(${ref}, {\n    // configurable is always false for private elements\n    // enumerable is always false for private elements\n    writable: true,\n    value: ${value},\n  })`;\n}\n\nfunction buildPrivateStaticFieldInitSpec(prop, privateNamesMap) {\n  const privateName = privateNamesMap.get(prop.node.key.id.name);\n  const {\n    id,\n    getId,\n    setId,\n    initAdded\n  } = privateName;\n  const isAccessor = getId || setId;\n  if (!prop.isProperty() && (initAdded || !isAccessor)) return;\n\n  if (isAccessor) {\n    privateNamesMap.set(prop.node.key.id.name, Object.assign({}, privateName, {\n      initAdded: true\n    }));\n    return _core().template.statement.ast`\n      var ${id.name} = {\n        // configurable is false by default\n        // enumerable is false by default\n        // writable is false by default\n        get: ${getId ? getId.name : prop.scope.buildUndefinedNode()},\n        set: ${setId ? setId.name : prop.scope.buildUndefinedNode()}\n      }\n    `;\n  }\n\n  const value = prop.node.value || prop.scope.buildUndefinedNode();\n  return _core().template.statement.ast`\n    var ${id} = {\n      // configurable is false by default\n      // enumerable is false by default\n      writable: true,\n      value: ${value}\n    };\n  `;\n}\n\nfunction buildPrivateMethodInitLoose(ref, prop, privateNamesMap) {\n  const privateName = privateNamesMap.get(prop.node.key.id.name);\n  const {\n    methodId,\n    id,\n    getId,\n    setId,\n    initAdded\n  } = privateName;\n  if (initAdded) return;\n\n  if (methodId) {\n    return _core().template.statement.ast`\n        Object.defineProperty(${ref}, ${id}, {\n          // configurable is false by default\n          // enumerable is false by default\n          // writable is false by default\n          value: ${methodId.name}\n        });\n      `;\n  }\n\n  const isAccessor = getId || setId;\n\n  if (isAccessor) {\n    privateNamesMap.set(prop.node.key.id.name, Object.assign({}, privateName, {\n      initAdded: true\n    }));\n    return _core().template.statement.ast`\n      Object.defineProperty(${ref}, ${id}, {\n        // configurable is false by default\n        // enumerable is false by default\n        // writable is false by default\n        get: ${getId ? getId.name : prop.scope.buildUndefinedNode()},\n        set: ${setId ? setId.name : prop.scope.buildUndefinedNode()}\n      });\n    `;\n  }\n}\n\nfunction buildPrivateInstanceMethodInitSpec(ref, prop, privateNamesMap) {\n  const privateName = privateNamesMap.get(prop.node.key.id.name);\n  const {\n    id,\n    getId,\n    setId,\n    initAdded\n  } = privateName;\n  if (initAdded) return;\n  const isAccessor = getId || setId;\n\n  if (isAccessor) {\n    privateNamesMap.set(prop.node.key.id.name, Object.assign({}, privateName, {\n      initAdded: true\n    }));\n    return _core().template.statement.ast`\n      ${id}.set(${ref}, {\n        get: ${getId ? getId.name : prop.scope.buildUndefinedNode()},\n        set: ${setId ? setId.name : prop.scope.buildUndefinedNode()}\n      });\n    `;\n  }\n\n  return _core().template.statement.ast`${id}.add(${ref})`;\n}\n\nfunction buildPublicFieldInitLoose(ref, prop) {\n  const {\n    key,\n    computed\n  } = prop.node;\n  const value = prop.node.value || prop.scope.buildUndefinedNode();\n  return _core().types.expressionStatement(_core().types.assignmentExpression(\"=\", _core().types.memberExpression(ref, key, computed || _core().types.isLiteral(key)), value));\n}\n\nfunction buildPublicFieldInitSpec(ref, prop, state) {\n  const {\n    key,\n    computed\n  } = prop.node;\n  const value = prop.node.value || prop.scope.buildUndefinedNode();\n  return _core().types.expressionStatement(_core().types.callExpression(state.addHelper(\"defineProperty\"), [ref, computed || _core().types.isLiteral(key) ? key : _core().types.stringLiteral(key.name), value]));\n}\n\nfunction buildPrivateStaticMethodInitLoose(ref, prop, state, privateNamesMap) {\n  const privateName = privateNamesMap.get(prop.node.key.id.name);\n  const {\n    id,\n    methodId,\n    getId,\n    setId,\n    initAdded\n  } = privateName;\n  if (initAdded) return;\n  const isAccessor = getId || setId;\n\n  if (isAccessor) {\n    privateNamesMap.set(prop.node.key.id.name, Object.assign({}, privateName, {\n      initAdded: true\n    }));\n    return _core().template.statement.ast`\n      Object.defineProperty(${ref}, ${id}, {\n        // configurable is false by default\n        // enumerable is false by default\n        // writable is false by default\n        get: ${getId ? getId.name : prop.scope.buildUndefinedNode()},\n        set: ${setId ? setId.name : prop.scope.buildUndefinedNode()}\n      })\n    `;\n  }\n\n  return _core().template.statement.ast`\n    Object.defineProperty(${ref}, ${id}, {\n      // configurable is false by default\n      // enumerable is false by default\n      // writable is false by default\n      value: ${methodId.name}\n    });\n  `;\n}\n\nfunction buildPrivateMethodDeclaration(prop, privateNamesMap, loose = false) {\n  const privateName = privateNamesMap.get(prop.node.key.id.name);\n  const {\n    id,\n    methodId,\n    getId,\n    setId,\n    getterDeclared,\n    setterDeclared,\n    static: isStatic\n  } = privateName;\n  const {\n    params,\n    body,\n    generator,\n    async\n  } = prop.node;\n\n  const methodValue = _core().types.functionExpression(methodId, params, body, generator, async);\n\n  const isGetter = getId && !getterDeclared && params.length === 0;\n  const isSetter = setId && !setterDeclared && params.length > 0;\n\n  if (isGetter) {\n    privateNamesMap.set(prop.node.key.id.name, Object.assign({}, privateName, {\n      getterDeclared: true\n    }));\n    return _core().types.variableDeclaration(\"var\", [_core().types.variableDeclarator(getId, methodValue)]);\n  }\n\n  if (isSetter) {\n    privateNamesMap.set(prop.node.key.id.name, Object.assign({}, privateName, {\n      setterDeclared: true\n    }));\n    return _core().types.variableDeclaration(\"var\", [_core().types.variableDeclarator(setId, methodValue)]);\n  }\n\n  if (isStatic && !loose) {\n    return _core().types.variableDeclaration(\"var\", [_core().types.variableDeclarator(id, _core().types.functionExpression(id, params, body, generator, async))]);\n  }\n\n  return _core().types.variableDeclaration(\"var\", [_core().types.variableDeclarator(methodId, methodValue)]);\n}\n\nconst thisContextVisitor = _core().traverse.visitors.merge([{\n  ThisExpression(path, state) {\n    state.needsClassRef = true;\n    path.replaceWith(_core().types.cloneNode(state.classRef));\n  }\n\n}, _helperReplaceSupers().environmentVisitor]);\n\nfunction replaceThisContext(path, ref, superRef, file, loose) {\n  const state = {\n    classRef: ref,\n    needsClassRef: false\n  };\n  const replacer = new (_helperReplaceSupers().default)({\n    methodPath: path,\n    isLoose: loose,\n    superRef,\n    file,\n\n    getObjectRef() {\n      state.needsClassRef = true;\n      return path.node.static ? ref : _core().types.memberExpression(ref, _core().types.identifier(\"prototype\"));\n    }\n\n  });\n  replacer.replace();\n\n  if (path.isProperty()) {\n    path.traverse(thisContextVisitor, state);\n  }\n\n  return state.needsClassRef;\n}\n\nfunction buildFieldsInitNodes(ref, superRef, props, privateNamesMap, state, loose) {\n  const staticNodes = [];\n  const instanceNodes = [];\n  let needsClassRef = false;\n\n  for (const prop of props) {\n    const isStatic = prop.node.static;\n    const isInstance = !isStatic;\n    const isPrivate = prop.isPrivate();\n    const isPublic = !isPrivate;\n    const isField = prop.isProperty();\n    const isMethod = !isField;\n\n    if (isStatic || isMethod && isPrivate) {\n      const replaced = replaceThisContext(prop, ref, superRef, state, loose);\n      needsClassRef = needsClassRef || replaced;\n    }\n\n    switch (true) {\n      case isStatic && isPrivate && isField && loose:\n        needsClassRef = true;\n        staticNodes.push(buildPrivateFieldInitLoose(_core().types.cloneNode(ref), prop, privateNamesMap));\n        break;\n\n      case isStatic && isPrivate && isField && !loose:\n        needsClassRef = true;\n        staticNodes.push(buildPrivateStaticFieldInitSpec(prop, privateNamesMap));\n        break;\n\n      case isStatic && isPublic && isField && loose:\n        needsClassRef = true;\n        staticNodes.push(buildPublicFieldInitLoose(_core().types.cloneNode(ref), prop));\n        break;\n\n      case isStatic && isPublic && isField && !loose:\n        needsClassRef = true;\n        staticNodes.push(buildPublicFieldInitSpec(_core().types.cloneNode(ref), prop, state));\n        break;\n\n      case isInstance && isPrivate && isField && loose:\n        instanceNodes.push(buildPrivateFieldInitLoose(_core().types.thisExpression(), prop, privateNamesMap));\n        break;\n\n      case isInstance && isPrivate && isField && !loose:\n        instanceNodes.push(buildPrivateInstanceFieldInitSpec(_core().types.thisExpression(), prop, privateNamesMap));\n        break;\n\n      case isInstance && isPrivate && isMethod && loose:\n        instanceNodes.unshift(buildPrivateMethodInitLoose(_core().types.thisExpression(), prop, privateNamesMap));\n        staticNodes.push(buildPrivateMethodDeclaration(prop, privateNamesMap, loose));\n        break;\n\n      case isInstance && isPrivate && isMethod && !loose:\n        instanceNodes.unshift(buildPrivateInstanceMethodInitSpec(_core().types.thisExpression(), prop, privateNamesMap));\n        staticNodes.push(buildPrivateMethodDeclaration(prop, privateNamesMap, loose));\n        break;\n\n      case isStatic && isPrivate && isMethod && !loose:\n        needsClassRef = true;\n        staticNodes.push(buildPrivateStaticFieldInitSpec(prop, privateNamesMap));\n        staticNodes.unshift(buildPrivateMethodDeclaration(prop, privateNamesMap, loose));\n        break;\n\n      case isStatic && isPrivate && isMethod && loose:\n        needsClassRef = true;\n        staticNodes.push(buildPrivateStaticMethodInitLoose(_core().types.cloneNode(ref), prop, state, privateNamesMap));\n        staticNodes.unshift(buildPrivateMethodDeclaration(prop, privateNamesMap, loose));\n        break;\n\n      case isInstance && isPublic && isField && loose:\n        instanceNodes.push(buildPublicFieldInitLoose(_core().types.thisExpression(), prop));\n        break;\n\n      case isInstance && isPublic && isField && !loose:\n        instanceNodes.push(buildPublicFieldInitSpec(_core().types.thisExpression(), prop, state));\n        break;\n\n      default:\n        throw new Error(\"Unreachable.\");\n    }\n  }\n\n  return {\n    staticNodes: staticNodes.filter(Boolean),\n    instanceNodes: instanceNodes.filter(Boolean),\n\n    wrapClass(path) {\n      for (const prop of props) {\n        prop.remove();\n      }\n\n      if (!needsClassRef) return path;\n\n      if (path.isClassExpression()) {\n        path.scope.push({\n          id: ref\n        });\n        path.replaceWith(_core().types.assignmentExpression(\"=\", _core().types.cloneNode(ref), path.node));\n      } else if (!path.node.id) {\n        path.node.id = ref;\n      }\n\n      return path;\n    }\n\n  };\n}"]}