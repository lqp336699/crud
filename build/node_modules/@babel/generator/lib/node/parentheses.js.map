{"version":3,"sources":["../../../../../../backend/node_modules/@babel/generator/lib/node/parentheses.js"],"names":["Object","defineProperty","exports","value","NullableTypeAnnotation","FunctionTypeAnnotation","UpdateExpression","ObjectExpression","DoExpression","Binary","IntersectionTypeAnnotation","UnionTypeAnnotation","TSAsExpression","TSTypeAssertion","TSIntersectionType","TSUnionType","BinaryExpression","SequenceExpression","AwaitExpression","YieldExpression","ClassExpression","UnaryLike","FunctionExpression","ArrowFunctionExpression","ConditionalExpression","OptionalMemberExpression","AssignmentExpression","NewExpression","t","_interopRequireWildcard","require","_getRequireWildcardCache","WeakMap","cache","obj","__esModule","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","default","PRECEDENCE","in","instanceof","isClassExtendsClause","node","parent","isClassDeclaration","isClassExpression","superClass","isArrayTypeAnnotation","isUnionTypeAnnotation","isIntersectionTypeAnnotation","isMemberExpression","object","isCallExpression","callee","isNewExpression","printStack","isFirstInStatement","considerArrow","operator","isBinaryExpression","left","isUnaryLike","isAwaitExpression","isBinary","parentOp","parentPos","nodeOp","nodePos","right","isLogicalExpression","isNullableTypeAnnotation","isTSArrayType","isTSOptionalType","isTSIntersectionType","isTSUnionType","isTSRestType","isVariableDeclarator","isFor","isForStatement","isThrowStatement","isReturnStatement","isIfStatement","test","isWhileStatement","isForInStatement","isSwitchStatement","discriminant","isExpressionStatement","expression","isYieldExpression","isConditionalExpression","considerDefaultExports","isExportDeclaration","isOptionalMemberExpression","isTaggedTemplateExpression","isTSTypeAssertion","isTSAsExpression","isObjectPattern","arguments","i","length","isExportDefaultDeclaration","declaration","isArrowFunctionExpression","body","isSequenceExpression","expressions","isConditional","isAssignmentExpression"],"mappings":"AAAA;;AAEAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,SAAO;AADoC,CAA7C;AAGAD,QAAQE,sBAAR,GAAiCA,sBAAjC;AACAF,QAAQG,sBAAR,GAAiCA,sBAAjC;AACAH,QAAQI,gBAAR,GAA2BA,gBAA3B;AACAJ,QAAQK,gBAAR,GAA2BA,gBAA3B;AACAL,QAAQM,YAAR,GAAuBA,YAAvB;AACAN,QAAQO,MAAR,GAAiBA,MAAjB;AACAP,QAAQQ,0BAAR,GAAqCR,QAAQS,mBAAR,GAA8BA,mBAAnE;AACAT,QAAQU,cAAR,GAAyBA,cAAzB;AACAV,QAAQW,eAAR,GAA0BA,eAA1B;AACAX,QAAQY,kBAAR,GAA6BZ,QAAQa,WAAR,GAAsBA,WAAnD;AACAb,QAAQc,gBAAR,GAA2BA,gBAA3B;AACAd,QAAQe,kBAAR,GAA6BA,kBAA7B;AACAf,QAAQgB,eAAR,GAA0BhB,QAAQiB,eAAR,GAA0BA,eAApD;AACAjB,QAAQkB,eAAR,GAA0BA,eAA1B;AACAlB,QAAQmB,SAAR,GAAoBA,SAApB;AACAnB,QAAQoB,kBAAR,GAA6BA,kBAA7B;AACApB,QAAQqB,uBAAR,GAAkCA,uBAAlC;AACArB,QAAQsB,qBAAR,GAAgCA,qBAAhC;AACAtB,QAAQuB,wBAAR,GAAmCA,wBAAnC;AACAvB,QAAQwB,oBAAR,GAA+BA,oBAA/B;AACAxB,QAAQyB,aAAR,GAAwBA,aAAxB;;AAEA,IAAIC,IAAIC,wBAAwBC,QAAQ,cAAR,CAAxB,CAAR;;AAEA,SAASC,wBAAT,GAAoC;AAAE,MAAI,OAAOC,OAAP,KAAmB,UAAvB,EAAmC,OAAO,IAAP,CAAa,IAAIC,QAAQ,IAAID,OAAJ,EAAZ,CAA2BD,2BAA2B,oCAAY;AAAE,WAAOE,KAAP;AAAe,GAAxD,CAA0D,OAAOA,KAAP;AAAe;;AAE1L,SAASJ,uBAAT,CAAiCK,GAAjC,EAAsC;AAAE,MAAIA,OAAOA,IAAIC,UAAf,EAA2B;AAAE,WAAOD,GAAP;AAAa,GAAC,IAAID,QAAQF,0BAAZ,CAAwC,IAAIE,SAASA,MAAMG,GAAN,CAAUF,GAAV,CAAb,EAA6B;AAAE,WAAOD,MAAMI,GAAN,CAAUH,GAAV,CAAP;AAAwB,GAAC,IAAII,SAAS,EAAb,CAAiB,IAAIJ,OAAO,IAAX,EAAiB;AAAE,QAAIK,wBAAwBvC,OAAOC,cAAP,IAAyBD,OAAOwC,wBAA5D,CAAsF,KAAK,IAAIC,GAAT,IAAgBP,GAAhB,EAAqB;AAAE,UAAIlC,OAAO0C,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCV,GAArC,EAA0CO,GAA1C,CAAJ,EAAoD;AAAE,YAAII,OAAON,wBAAwBvC,OAAOwC,wBAAP,CAAgCN,GAAhC,EAAqCO,GAArC,CAAxB,GAAoE,IAA/E,CAAqF,IAAII,SAASA,KAAKR,GAAL,IAAYQ,KAAKC,GAA1B,CAAJ,EAAoC;AAAE9C,iBAAOC,cAAP,CAAsBqC,MAAtB,EAA8BG,GAA9B,EAAmCI,IAAnC;AAA2C,SAAjF,MAAuF;AAAEP,iBAAOG,GAAP,IAAcP,IAAIO,GAAJ,CAAd;AAAyB;AAAE;AAAE;AAAE,GAACH,OAAOS,OAAP,GAAiBb,GAAjB,CAAsB,IAAID,KAAJ,EAAW;AAAEA,UAAMa,GAAN,CAAUZ,GAAV,EAAeI,MAAf;AAAyB,GAAC,OAAOA,MAAP;AAAgB;;AAErpB,IAAMU,aAAa;AACjB,QAAM,CADW;AAEjB,QAAM,CAFW;AAGjB,OAAK,CAHY;AAIjB,OAAK,CAJY;AAKjB,OAAK,CALY;AAMjB,QAAM,CANW;AAOjB,SAAO,CAPU;AAQjB,QAAM,CARW;AASjB,SAAO,CATU;AAUjB,OAAK,CAVY;AAWjB,OAAK,CAXY;AAYjB,QAAM,CAZW;AAajB,QAAM,CAbW;AAcjBC,MAAI,CAda;AAejBC,cAAY,CAfK;AAgBjB,QAAM,CAhBW;AAiBjB,QAAM,CAjBW;AAkBjB,SAAO,CAlBU;AAmBjB,OAAK,CAnBY;AAoBjB,OAAK,CApBY;AAqBjB,OAAK,CArBY;AAsBjB,OAAK,CAtBY;AAuBjB,OAAK,CAvBY;AAwBjB,QAAM;AAxBW,CAAnB;;AA2BA,IAAMC,uBAAuB,SAAvBA,oBAAuB,CAACC,IAAD,EAAOC,MAAP;AAAA,SAAkB,CAACzB,EAAE0B,kBAAF,CAAqBD,MAArB,KAAgCzB,EAAE2B,iBAAF,CAAoBF,MAApB,CAAjC,KAAiEA,OAAOG,UAAP,KAAsBJ,IAAzG;AAAA,CAA7B;;AAEA,SAAShD,sBAAT,CAAgCgD,IAAhC,EAAsCC,MAAtC,EAA8C;AAC5C,SAAOzB,EAAE6B,qBAAF,CAAwBJ,MAAxB,CAAP;AACD;;AAED,SAAShD,sBAAT,CAAgC+C,IAAhC,EAAsCC,MAAtC,EAA8C;AAC5C,SAAOzB,EAAE8B,qBAAF,CAAwBL,MAAxB,KAAmCzB,EAAE+B,4BAAF,CAA+BN,MAA/B,CAAnC,IAA6EzB,EAAE6B,qBAAF,CAAwBJ,MAAxB,CAApF;AACD;;AAED,SAAS/C,gBAAT,CAA0B8C,IAA1B,EAAgCC,MAAhC,EAAwC;AACtC,SAAOzB,EAAEgC,kBAAF,CAAqBP,MAArB,EAA6B;AAClCQ,YAAQT;AAD0B,GAA7B,KAEDxB,EAAEkC,gBAAF,CAAmBT,MAAnB,EAA2B;AAC/BU,YAAQX;AADuB,GAA3B,CAFC,IAIDxB,EAAEoC,eAAF,CAAkBX,MAAlB,EAA0B;AAC9BU,YAAQX;AADsB,GAA1B,CAJC,IAMDD,qBAAqBC,IAArB,EAA2BC,MAA3B,CANN;AAOD;;AAED,SAAS9C,gBAAT,CAA0B6C,IAA1B,EAAgCC,MAAhC,EAAwCY,UAAxC,EAAoD;AAClD,SAAOC,mBAAmBD,UAAnB,EAA+B;AACpCE,mBAAe;AADqB,GAA/B,CAAP;AAGD;;AAED,SAAS3D,YAAT,CAAsB4C,IAAtB,EAA4BC,MAA5B,EAAoCY,UAApC,EAAgD;AAC9C,SAAOC,mBAAmBD,UAAnB,CAAP;AACD;;AAED,SAASxD,MAAT,CAAgB2C,IAAhB,EAAsBC,MAAtB,EAA8B;AAC5B,MAAID,KAAKgB,QAAL,KAAkB,IAAlB,IAA0BxC,EAAEyC,kBAAF,CAAqBhB,MAArB,EAA6B;AACzDe,cAAU;AAD+C,GAA7B,CAA9B,EAEI;AACF,WAAOf,OAAOiB,IAAP,KAAgBlB,IAAvB;AACD;;AAED,MAAID,qBAAqBC,IAArB,EAA2BC,MAA3B,CAAJ,EAAwC;AACtC,WAAO,IAAP;AACD;;AAED,MAAI,CAACzB,EAAEkC,gBAAF,CAAmBT,MAAnB,KAA8BzB,EAAEoC,eAAF,CAAkBX,MAAlB,CAA/B,KAA6DA,OAAOU,MAAP,KAAkBX,IAA/E,IAAuFxB,EAAE2C,WAAF,CAAclB,MAAd,CAAvF,IAAgHzB,EAAEgC,kBAAF,CAAqBP,MAArB,KAAgCA,OAAOQ,MAAP,KAAkBT,IAAlK,IAA0KxB,EAAE4C,iBAAF,CAAoBnB,MAApB,CAA9K,EAA2M;AACzM,WAAO,IAAP;AACD;;AAED,MAAIzB,EAAE6C,QAAF,CAAWpB,MAAX,CAAJ,EAAwB;AACtB,QAAMqB,WAAWrB,OAAOe,QAAxB;AACA,QAAMO,YAAY3B,WAAW0B,QAAX,CAAlB;AACA,QAAME,SAASxB,KAAKgB,QAApB;AACA,QAAMS,UAAU7B,WAAW4B,MAAX,CAAhB;;AAEA,QAAID,cAAcE,OAAd,IAAyBxB,OAAOyB,KAAP,KAAiB1B,IAA1C,IAAkD,CAACxB,EAAEmD,mBAAF,CAAsB1B,MAAtB,CAAnD,IAAoFsB,YAAYE,OAApG,EAA6G;AAC3G,aAAO,IAAP;AACD;AACF;;AAED,SAAO,KAAP;AACD;;AAED,SAASlE,mBAAT,CAA6ByC,IAA7B,EAAmCC,MAAnC,EAA2C;AACzC,SAAOzB,EAAE6B,qBAAF,CAAwBJ,MAAxB,KAAmCzB,EAAEoD,wBAAF,CAA2B3B,MAA3B,CAAnC,IAAyEzB,EAAE+B,4BAAF,CAA+BN,MAA/B,CAAzE,IAAmHzB,EAAE8B,qBAAF,CAAwBL,MAAxB,CAA1H;AACD;;AAED,SAASzC,cAAT,GAA0B;AACxB,SAAO,IAAP;AACD;;AAED,SAASC,eAAT,GAA2B;AACzB,SAAO,IAAP;AACD;;AAED,SAASE,WAAT,CAAqBqC,IAArB,EAA2BC,MAA3B,EAAmC;AACjC,SAAOzB,EAAEqD,aAAF,CAAgB5B,MAAhB,KAA2BzB,EAAEsD,gBAAF,CAAmB7B,MAAnB,CAA3B,IAAyDzB,EAAEuD,oBAAF,CAAuB9B,MAAvB,CAAzD,IAA2FzB,EAAEwD,aAAF,CAAgB/B,MAAhB,CAA3F,IAAsHzB,EAAEyD,YAAF,CAAehC,MAAf,CAA7H;AACD;;AAED,SAASrC,gBAAT,CAA0BoC,IAA1B,EAAgCC,MAAhC,EAAwC;AACtC,SAAOD,KAAKgB,QAAL,KAAkB,IAAlB,KAA2BxC,EAAE0D,oBAAF,CAAuBjC,MAAvB,KAAkCzB,EAAE2D,KAAF,CAAQlC,MAAR,CAA7D,CAAP;AACD;;AAED,SAASpC,kBAAT,CAA4BmC,IAA5B,EAAkCC,MAAlC,EAA0C;AACxC,MAAIzB,EAAE4D,cAAF,CAAiBnC,MAAjB,KAA4BzB,EAAE6D,gBAAF,CAAmBpC,MAAnB,CAA5B,IAA0DzB,EAAE8D,iBAAF,CAAoBrC,MAApB,CAA1D,IAAyFzB,EAAE+D,aAAF,CAAgBtC,MAAhB,KAA2BA,OAAOuC,IAAP,KAAgBxC,IAApI,IAA4IxB,EAAEiE,gBAAF,CAAmBxC,MAAnB,KAA8BA,OAAOuC,IAAP,KAAgBxC,IAA1L,IAAkMxB,EAAEkE,gBAAF,CAAmBzC,MAAnB,KAA8BA,OAAOyB,KAAP,KAAiB1B,IAAjP,IAAyPxB,EAAEmE,iBAAF,CAAoB1C,MAApB,KAA+BA,OAAO2C,YAAP,KAAwB5C,IAAhT,IAAwTxB,EAAEqE,qBAAF,CAAwB5C,MAAxB,KAAmCA,OAAO6C,UAAP,KAAsB9C,IAArX,EAA2X;AACzX,WAAO,KAAP;AACD;;AAED,SAAO,IAAP;AACD;;AAED,SAASjC,eAAT,CAAyBiC,IAAzB,EAA+BC,MAA/B,EAAuC;AACrC,SAAOzB,EAAE6C,QAAF,CAAWpB,MAAX,KAAsBzB,EAAE2C,WAAF,CAAclB,MAAd,CAAtB,IAA+CzB,EAAEkC,gBAAF,CAAmBT,MAAnB,CAA/C,IAA6EzB,EAAEgC,kBAAF,CAAqBP,MAArB,CAA7E,IAA6GzB,EAAEoC,eAAF,CAAkBX,MAAlB,CAA7G,IAA0IzB,EAAE4C,iBAAF,CAAoBnB,MAApB,KAA+BzB,EAAEuE,iBAAF,CAAoB/C,IAApB,CAAzK,IAAsMxB,EAAEwE,uBAAF,CAA0B/C,MAA1B,KAAqCD,SAASC,OAAOuC,IAA3P,IAAmQzC,qBAAqBC,IAArB,EAA2BC,MAA3B,CAA1Q;AACD;;AAED,SAASjC,eAAT,CAAyBgC,IAAzB,EAA+BC,MAA/B,EAAuCY,UAAvC,EAAmD;AACjD,SAAOC,mBAAmBD,UAAnB,EAA+B;AACpCoC,4BAAwB;AADY,GAA/B,CAAP;AAGD;;AAED,SAAShF,SAAT,CAAmB+B,IAAnB,EAAyBC,MAAzB,EAAiC;AAC/B,SAAOzB,EAAEgC,kBAAF,CAAqBP,MAArB,EAA6B;AAClCQ,YAAQT;AAD0B,GAA7B,KAEDxB,EAAEkC,gBAAF,CAAmBT,MAAnB,EAA2B;AAC/BU,YAAQX;AADuB,GAA3B,CAFC,IAIDxB,EAAEoC,eAAF,CAAkBX,MAAlB,EAA0B;AAC9BU,YAAQX;AADsB,GAA1B,CAJC,IAMDxB,EAAEyC,kBAAF,CAAqBhB,MAArB,EAA6B;AACjCe,cAAU,IADuB;AAEjCE,UAAMlB;AAF2B,GAA7B,CANC,IASDD,qBAAqBC,IAArB,EAA2BC,MAA3B,CATN;AAUD;;AAED,SAAS/B,kBAAT,CAA4B8B,IAA5B,EAAkCC,MAAlC,EAA0CY,UAA1C,EAAsD;AACpD,SAAOC,mBAAmBD,UAAnB,EAA+B;AACpCoC,4BAAwB;AADY,GAA/B,CAAP;AAGD;;AAED,SAAS9E,uBAAT,CAAiC6B,IAAjC,EAAuCC,MAAvC,EAA+C;AAC7C,SAAOzB,EAAE0E,mBAAF,CAAsBjD,MAAtB,KAAiC7B,sBAAsB4B,IAAtB,EAA4BC,MAA5B,CAAxC;AACD;;AAED,SAAS7B,qBAAT,CAA+B4B,IAA/B,EAAqCC,MAArC,EAA6C;AAC3C,MAAIzB,EAAE2C,WAAF,CAAclB,MAAd,KAAyBzB,EAAE6C,QAAF,CAAWpB,MAAX,CAAzB,IAA+CzB,EAAEwE,uBAAF,CAA0B/C,MAA1B,EAAkC;AACnFuC,UAAMxC;AAD6E,GAAlC,CAA/C,IAEExB,EAAE4C,iBAAF,CAAoBnB,MAApB,CAFF,IAEiCzB,EAAE2E,0BAAF,CAA6BlD,MAA7B,CAFjC,IAEyEzB,EAAE4E,0BAAF,CAA6BnD,MAA7B,CAFzE,IAEiHzB,EAAE6E,iBAAF,CAAoBpD,MAApB,CAFjH,IAEgJzB,EAAE8E,gBAAF,CAAmBrD,MAAnB,CAFpJ,EAEgL;AAC9K,WAAO,IAAP;AACD;;AAED,SAAOhC,UAAU+B,IAAV,EAAgBC,MAAhB,CAAP;AACD;;AAED,SAAS5B,wBAAT,CAAkC2B,IAAlC,EAAwCC,MAAxC,EAAgD;AAC9C,SAAOzB,EAAEkC,gBAAF,CAAmBT,MAAnB,KAA8BzB,EAAEgC,kBAAF,CAAqBP,MAArB,CAArC;AACD;;AAED,SAAS3B,oBAAT,CAA8B0B,IAA9B,EAAoC;AAClC,MAAIxB,EAAE+E,eAAF,CAAkBvD,KAAKkB,IAAvB,CAAJ,EAAkC;AAChC,WAAO,IAAP;AACD,GAFD,MAEO;AACL,WAAO9C,uCAAyBoF,SAAzB,CAAP;AACD;AACF;;AAED,SAASjF,aAAT,CAAuByB,IAAvB,EAA6BC,MAA7B,EAAqC;AACnC,SAAOF,qBAAqBC,IAArB,EAA2BC,MAA3B,CAAP;AACD;;AAED,SAASa,kBAAT,CAA4BD,UAA5B,EAGQ;AAAA,iFAAJ,EAAI;AAAA,gCAFNE,aAEM;AAAA,MAFNA,aAEM,sCAFU,KAEV;AAAA,mCADNkC,sBACM;AAAA,MADNA,sBACM,yCADmB,KACnB;;AACN,MAAIQ,IAAI5C,WAAW6C,MAAX,GAAoB,CAA5B;AACA,MAAI1D,OAAOa,WAAW4C,CAAX,CAAX;AACAA;AACA,MAAIxD,SAASY,WAAW4C,CAAX,CAAb;;AAEA,SAAOA,IAAI,CAAX,EAAc;AACZ,QAAIjF,EAAEqE,qBAAF,CAAwB5C,MAAxB,EAAgC;AAClC6C,kBAAY9C;AADsB,KAAhC,KAEExB,EAAE4E,0BAAF,CAA6BnD,MAA7B,CAFF,IAE0CgD,0BAA0BzE,EAAEmF,0BAAF,CAA6B1D,MAA7B,EAAqC;AAC3G2D,mBAAa5D;AAD8F,KAArC,CAFpE,IAIEe,iBAAiBvC,EAAEqF,yBAAF,CAA4B5D,MAA5B,EAAoC;AACzD6D,YAAM9D;AADmD,KAApC,CAJvB,EAMI;AACF,aAAO,IAAP;AACD;;AAED,QAAIxB,EAAEkC,gBAAF,CAAmBT,MAAnB,EAA2B;AAC7BU,cAAQX;AADqB,KAA3B,KAEExB,EAAEuF,oBAAF,CAAuB9D,MAAvB,KAAkCA,OAAO+D,WAAP,CAAmB,CAAnB,MAA0BhE,IAF9D,IAEsExB,EAAEgC,kBAAF,CAAqBP,MAArB,EAA6B;AACrGQ,cAAQT;AAD6F,KAA7B,CAFtE,IAIExB,EAAEyF,aAAF,CAAgBhE,MAAhB,EAAwB;AAC5BuC,YAAMxC;AADsB,KAAxB,CAJF,IAMExB,EAAE6C,QAAF,CAAWpB,MAAX,EAAmB;AACvBiB,YAAMlB;AADiB,KAAnB,CANF,IAQExB,EAAE0F,sBAAF,CAAyBjE,MAAzB,EAAiC;AACrCiB,YAAMlB;AAD+B,KAAjC,CARN,EAUI;AACFA,aAAOC,MAAP;AACAwD;AACAxD,eAASY,WAAW4C,CAAX,CAAT;AACD,KAdD,MAcO;AACL,aAAO,KAAP;AACD;AACF;;AAED,SAAO,KAAP;AACD","file":"parentheses.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NullableTypeAnnotation = NullableTypeAnnotation;\nexports.FunctionTypeAnnotation = FunctionTypeAnnotation;\nexports.UpdateExpression = UpdateExpression;\nexports.ObjectExpression = ObjectExpression;\nexports.DoExpression = DoExpression;\nexports.Binary = Binary;\nexports.IntersectionTypeAnnotation = exports.UnionTypeAnnotation = UnionTypeAnnotation;\nexports.TSAsExpression = TSAsExpression;\nexports.TSTypeAssertion = TSTypeAssertion;\nexports.TSIntersectionType = exports.TSUnionType = TSUnionType;\nexports.BinaryExpression = BinaryExpression;\nexports.SequenceExpression = SequenceExpression;\nexports.AwaitExpression = exports.YieldExpression = YieldExpression;\nexports.ClassExpression = ClassExpression;\nexports.UnaryLike = UnaryLike;\nexports.FunctionExpression = FunctionExpression;\nexports.ArrowFunctionExpression = ArrowFunctionExpression;\nexports.ConditionalExpression = ConditionalExpression;\nexports.OptionalMemberExpression = OptionalMemberExpression;\nexports.AssignmentExpression = AssignmentExpression;\nexports.NewExpression = NewExpression;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst PRECEDENCE = {\n  \"||\": 0,\n  \"&&\": 1,\n  \"|\": 2,\n  \"^\": 3,\n  \"&\": 4,\n  \"==\": 5,\n  \"===\": 5,\n  \"!=\": 5,\n  \"!==\": 5,\n  \"<\": 6,\n  \">\": 6,\n  \"<=\": 6,\n  \">=\": 6,\n  in: 6,\n  instanceof: 6,\n  \">>\": 7,\n  \"<<\": 7,\n  \">>>\": 7,\n  \"+\": 8,\n  \"-\": 8,\n  \"*\": 9,\n  \"/\": 9,\n  \"%\": 9,\n  \"**\": 10\n};\n\nconst isClassExtendsClause = (node, parent) => (t.isClassDeclaration(parent) || t.isClassExpression(parent)) && parent.superClass === node;\n\nfunction NullableTypeAnnotation(node, parent) {\n  return t.isArrayTypeAnnotation(parent);\n}\n\nfunction FunctionTypeAnnotation(node, parent) {\n  return t.isUnionTypeAnnotation(parent) || t.isIntersectionTypeAnnotation(parent) || t.isArrayTypeAnnotation(parent);\n}\n\nfunction UpdateExpression(node, parent) {\n  return t.isMemberExpression(parent, {\n    object: node\n  }) || t.isCallExpression(parent, {\n    callee: node\n  }) || t.isNewExpression(parent, {\n    callee: node\n  }) || isClassExtendsClause(node, parent);\n}\n\nfunction ObjectExpression(node, parent, printStack) {\n  return isFirstInStatement(printStack, {\n    considerArrow: true\n  });\n}\n\nfunction DoExpression(node, parent, printStack) {\n  return isFirstInStatement(printStack);\n}\n\nfunction Binary(node, parent) {\n  if (node.operator === \"**\" && t.isBinaryExpression(parent, {\n    operator: \"**\"\n  })) {\n    return parent.left === node;\n  }\n\n  if (isClassExtendsClause(node, parent)) {\n    return true;\n  }\n\n  if ((t.isCallExpression(parent) || t.isNewExpression(parent)) && parent.callee === node || t.isUnaryLike(parent) || t.isMemberExpression(parent) && parent.object === node || t.isAwaitExpression(parent)) {\n    return true;\n  }\n\n  if (t.isBinary(parent)) {\n    const parentOp = parent.operator;\n    const parentPos = PRECEDENCE[parentOp];\n    const nodeOp = node.operator;\n    const nodePos = PRECEDENCE[nodeOp];\n\n    if (parentPos === nodePos && parent.right === node && !t.isLogicalExpression(parent) || parentPos > nodePos) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction UnionTypeAnnotation(node, parent) {\n  return t.isArrayTypeAnnotation(parent) || t.isNullableTypeAnnotation(parent) || t.isIntersectionTypeAnnotation(parent) || t.isUnionTypeAnnotation(parent);\n}\n\nfunction TSAsExpression() {\n  return true;\n}\n\nfunction TSTypeAssertion() {\n  return true;\n}\n\nfunction TSUnionType(node, parent) {\n  return t.isTSArrayType(parent) || t.isTSOptionalType(parent) || t.isTSIntersectionType(parent) || t.isTSUnionType(parent) || t.isTSRestType(parent);\n}\n\nfunction BinaryExpression(node, parent) {\n  return node.operator === \"in\" && (t.isVariableDeclarator(parent) || t.isFor(parent));\n}\n\nfunction SequenceExpression(node, parent) {\n  if (t.isForStatement(parent) || t.isThrowStatement(parent) || t.isReturnStatement(parent) || t.isIfStatement(parent) && parent.test === node || t.isWhileStatement(parent) && parent.test === node || t.isForInStatement(parent) && parent.right === node || t.isSwitchStatement(parent) && parent.discriminant === node || t.isExpressionStatement(parent) && parent.expression === node) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction YieldExpression(node, parent) {\n  return t.isBinary(parent) || t.isUnaryLike(parent) || t.isCallExpression(parent) || t.isMemberExpression(parent) || t.isNewExpression(parent) || t.isAwaitExpression(parent) && t.isYieldExpression(node) || t.isConditionalExpression(parent) && node === parent.test || isClassExtendsClause(node, parent);\n}\n\nfunction ClassExpression(node, parent, printStack) {\n  return isFirstInStatement(printStack, {\n    considerDefaultExports: true\n  });\n}\n\nfunction UnaryLike(node, parent) {\n  return t.isMemberExpression(parent, {\n    object: node\n  }) || t.isCallExpression(parent, {\n    callee: node\n  }) || t.isNewExpression(parent, {\n    callee: node\n  }) || t.isBinaryExpression(parent, {\n    operator: \"**\",\n    left: node\n  }) || isClassExtendsClause(node, parent);\n}\n\nfunction FunctionExpression(node, parent, printStack) {\n  return isFirstInStatement(printStack, {\n    considerDefaultExports: true\n  });\n}\n\nfunction ArrowFunctionExpression(node, parent) {\n  return t.isExportDeclaration(parent) || ConditionalExpression(node, parent);\n}\n\nfunction ConditionalExpression(node, parent) {\n  if (t.isUnaryLike(parent) || t.isBinary(parent) || t.isConditionalExpression(parent, {\n    test: node\n  }) || t.isAwaitExpression(parent) || t.isOptionalMemberExpression(parent) || t.isTaggedTemplateExpression(parent) || t.isTSTypeAssertion(parent) || t.isTSAsExpression(parent)) {\n    return true;\n  }\n\n  return UnaryLike(node, parent);\n}\n\nfunction OptionalMemberExpression(node, parent) {\n  return t.isCallExpression(parent) || t.isMemberExpression(parent);\n}\n\nfunction AssignmentExpression(node) {\n  if (t.isObjectPattern(node.left)) {\n    return true;\n  } else {\n    return ConditionalExpression(...arguments);\n  }\n}\n\nfunction NewExpression(node, parent) {\n  return isClassExtendsClause(node, parent);\n}\n\nfunction isFirstInStatement(printStack, {\n  considerArrow = false,\n  considerDefaultExports = false\n} = {}) {\n  let i = printStack.length - 1;\n  let node = printStack[i];\n  i--;\n  let parent = printStack[i];\n\n  while (i > 0) {\n    if (t.isExpressionStatement(parent, {\n      expression: node\n    }) || t.isTaggedTemplateExpression(parent) || considerDefaultExports && t.isExportDefaultDeclaration(parent, {\n      declaration: node\n    }) || considerArrow && t.isArrowFunctionExpression(parent, {\n      body: node\n    })) {\n      return true;\n    }\n\n    if (t.isCallExpression(parent, {\n      callee: node\n    }) || t.isSequenceExpression(parent) && parent.expressions[0] === node || t.isMemberExpression(parent, {\n      object: node\n    }) || t.isConditional(parent, {\n      test: node\n    }) || t.isBinary(parent, {\n      left: node\n    }) || t.isAssignmentExpression(parent, {\n      left: node\n    })) {\n      node = parent;\n      i--;\n      parent = printStack[i];\n    } else {\n      return false;\n    }\n  }\n\n  return false;\n}"]}